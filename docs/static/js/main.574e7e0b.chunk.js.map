{"version":3,"sources":["components/Group.js","components/AppContext.js","components/RefItem.js","helpers/index.js","components/Result.js","components/Calc.js","components/RefScale.js","components/Intro.js","components/App.js","index.js"],"names":["Group","props","children","react_default","a","createElement","className","referenceValues","color","label","max","min","HeightContext","React","createContext","WeightContext","ReferenceValuesContext","AppContext","_ref","_useState","useState","_useState2","Object","slicedToArray","weight","setWeight","_useState3","_useState4","height","setHeight","Provider","value","RefItem","userBMI","concat","style","backgroundColor","width","validateInput","test","Result","useContext","showDefaultMsg","meters","Number","toFixed","ref","find","item","components_RefItem","findUserScore","Calc","heightField","formErrors","setFormError","updateErrors","newObj","objectSpread","Fragment","htmlFor","id","autoFocus","type","onChange","event","target","isValid","onKeyUp","key","focus","input","RefScale","list","map","index","Intro","App","components_AppContext","marginTop","components_Group","components_Result","src_components_Calc","components_RefScale","components_Intro","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.574e7e0b.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Group = (props) => {\n  return props.children ? <div className='ui segment'>{props.children}</div> : null\n}\n\nGroup.propTypes = {\n  children: PropTypes.element\n}\n\nexport default Group\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst referenceValues = [\n  { color: '#FF0000', label: 'Very severely underweight', max: 16 },\n  { color: '#FE642E', label: 'Severely underweight', min: 16, max: 16.99 },\n  { color: '#F7D358', label: 'Underweight', min: 17, max: 18.49 },\n  { color: '#5FB404', label: 'Normal (healthy weight)', min: 18.5, max: 24.99 },\n  { color: '#F7D358', label: 'Overweight', min: 25, max: 29.99 },\n  { color: '#FE642E', label: 'Obese Class I', min: 30, max: 34.99 },\n  { color: '#FF0000', label: 'Obese Class II', min: 35, max: 39.99 },\n  { color: '#8A0808', label: 'Obese Class III', min: 40 }\n]\n\nexport const HeightContext = React.createContext(null)\nexport const WeightContext = React.createContext(null)\nexport const ReferenceValuesContext = React.createContext(null)\n\nconst AppContext = ({ children }) => {\n  const [weight, setWeight] = useState(0)\n  const [height, setHeight] = useState(0)\n\n  return (\n    <ReferenceValuesContext.Provider value={referenceValues}>\n      <WeightContext.Provider value={{ weight, setWeight }}>\n        <HeightContext.Provider value={{ height, setHeight }}>\n          { children }\n        </HeightContext.Provider>\n      </WeightContext.Provider>\n    </ReferenceValuesContext.Provider>\n  )\n}\n\nAppContext.propTypes = {\n  children: PropTypes.element\n}\n\nexport default AppContext\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst RefItem = ({ userBMI, min, max, color, label }) => {\n  const displayValue = () => {\n    if (userBMI) {\n      return userBMI\n    }\n\n    if (!min && max) {\n      return <span>&lt; {max}</span>\n    }\n\n    if (min && !max) {\n      return <span>&ge; {min}</span>\n    }\n\n    return `${min} - ${max}`\n  }\n\n  return (\n    <div className='item'>\n      <div className='right floated content'>\n        <div className='ui'>{displayValue()}</div>\n      </div>\n      <span className='left floated content' style={{ backgroundColor: color, width: '15px', height: '15px' }} />\n      <div className='content'>\n        {label}\n      </div>\n    </div>\n  )\n}\n\nRefItem.propTypes = {\n  userBMI: PropTypes.number,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  color: PropTypes.string,\n  label: PropTypes.string\n}\n\nexport default RefItem\n","export const validateInput = (value) => {\n  return value && /^\\d+$/.test(value)\n}\n","import React, { useContext } from 'react'\n\nimport { HeightContext, WeightContext, ReferenceValuesContext } from './AppContext'\nimport RefItem from './RefItem'\nimport { validateInput } from '../helpers'\n\nconst Result = () => {\n  const { height } = useContext(HeightContext)\n  const { weight } = useContext(WeightContext)\n  const referenceValues = useContext(ReferenceValuesContext)\n\n  const showDefaultMsg = () => {\n    return <div>Please fill form with your data to see your result.</div>\n  }\n\n  const findUserScore = () => {\n    if (!validateInput(height) || !validateInput(weight)) {\n      return showDefaultMsg()\n    }\n    // convert height to meters\n    const meters = height / 100\n    // calculate user BMI\n    const userBMI = Number((weight / (meters * meters)).toFixed(2))\n    // find user range\n    const ref = referenceValues.find(item => {\n      if (!item.min && item.max > userBMI) {\n        return true\n      }\n      if (item.min < userBMI && item.max > userBMI) {\n        return true\n      }\n      if (!item.max && item.min <= userBMI) {\n        return true\n      }\n\n      return false\n    })\n\n    if (!ref) {\n      return showDefaultMsg()\n    } else {\n      return <RefItem color={ref.color} label={ref.label} userBMI={userBMI} />\n    }\n  }\n\n  return <div className='ui middle aligned list'>{findUserScore()}</div>\n}\n\nexport default Result\n","import React, { useContext, useState } from 'react'\n\nimport { HeightContext, WeightContext } from './AppContext'\nimport { validateInput } from '../helpers'\nimport './Calc.css'\n\nconst Calc = () => {\n  const { setHeight } = useContext(HeightContext)\n  const { setWeight } = useContext(WeightContext)\n  let heightField = null\n  const errorMessage = 'Only number are allowed.'\n  const [formErrors, setFormError] = useState({ height: false, weight: false })\n\n  const updateErrors = newObj => {\n    setFormError({\n      ...formErrors,\n      ...newObj\n    })\n  }\n\n  const onWeightChangeHandler = event => {\n    const value = event.target.value\n    const isValid = validateInput(value)\n    updateErrors({ weight: !isValid })\n    setWeight(isValid ? value : null)\n  }\n\n  const onHeightChangeHandler = event => {\n    const value = event.target.value\n    const isValid = validateInput(value)\n    updateErrors({ height: !isValid })\n    setHeight(isValid ? value : null)\n  }\n\n  const onWeightKeyUp = event => {\n    if (event.key === 'Enter') {\n      heightField.focus()\n    }\n  }\n  /*\n  const onHeightKeyUp = event => {\n    if (event.key === 'Enter' && !weightField.value) {\n      weightField.focus()\n    }\n  }\n  */\n\n  return (\n    <>\n      <form>\n        <div className='form-row'>\n          <div>\n            <label htmlFor='weight-input'>Weight [kg]</label>\n          </div>\n          <div className={formErrors.weight ? 'error' : null}>\n            <input\n              id='weight-input'\n              autoFocus\n              type='text'\n              onChange={onWeightChangeHandler}\n              onKeyUp={onWeightKeyUp}\n            />\n            <br />\n            { formErrors.weight ? <span className='error-message'>{errorMessage}</span> : null }\n          </div>\n        </div>\n        <div className='form-row'>\n          <div>\n            <label htmlFor='height-input'>Height [cm]</label>\n          </div>\n          <div className={formErrors.height ? 'error' : null}>\n            <input\n              id='height-input'\n              ref={input => { heightField = input }}\n              type='text'\n              onChange={onHeightChangeHandler}\n            />\n            <br />\n            { formErrors.height ? <span className='error-message'>{errorMessage}</span> : null }\n          </div>\n        </div>\n      </form>\n    </>\n  )\n}\n\nexport default Calc\n","import React, { useContext } from 'react'\nimport { ReferenceValuesContext } from './AppContext'\n\nimport RefItem from './RefItem'\n\nconst RefScale = () => {\n  const referenceValues = useContext(ReferenceValuesContext)\n  const list = referenceValues.map((ref, index) => {\n    return <RefItem key={index} color={ref.color} label={ref.label} min={ref.min} max={ref.max} />\n  })\n  return (\n    <>\n      <h4>Reference values</h4>\n      <div className='ui middle aligned divided list'>{list}</div>\n    </>\n  )\n}\n\nexport default RefScale\n","import React from 'react'\n\nconst Intro = () => {\n  return (\n    <div>\n      <h4>Introduction</h4>\n      <p>\n        The body mass index (BMI) or Quetelet index is a value derived\n        from the mass (weight) and height of an individual. The BMI is\n        defined as the body mass divided by the square of the body height,\n        and is universally expressed in units of kg/m2, resulting from mass\n        in kilograms and height in meters.\n      </p>\n    </div>\n  )\n}\n\nexport default Intro\n","import React from 'react'\n\nimport Group from './Group'\nimport Result from './Result'\nimport Calc from './Calc'\nimport RefScale from './RefScale'\nimport Intro from './Intro'\nimport AppContext from './AppContext'\n\nconst App = () => (\n  <AppContext>\n    <div className='ui container' style={{ marginTop: '10px' }}>\n      <Group>\n        <Result />\n      </Group>\n      <Group>\n        <Calc />\n      </Group>\n      <Group>\n        <RefScale />\n      </Group>\n      <Group>\n        <Intro />\n      </Group>\n    </div>\n  </AppContext>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}